---
title: "Untitled"
author: "Yang Xiao"
date: "2024-03-04"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

devtools::install_github("diseasesurveillance/denguetracker")
library(denguetracker)

# Set directory
setwd('/Users/xiaoy0a/Desktop/Task/Nowcasting/2ndMeeting/')
```

```{r data, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

data("municipalities")

#Now test 4 states with different features
AC <- fetch_data_from_state("AC", 2013, 2023)
AM <- fetch_data_from_state("AM", 2013, 2023)
RJ <- fetch_data_from_state("RJ", 2013, 2023)
SP <- fetch_data_from_state("SP", 2013, 2023)

# Google Trends data
colnames_GT <- c("Time", "Dengue", "Sintomas.dengue")

AC_GT <- read.csv("AC_GT.csv", header = F, col.names = colnames_GT
                  )[-c(1:3),]




```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
start_d <- as.Date('2015-01-01'); end_d <- as.Date('2019-12-31')
start_pred <- start_d %m+% months(1); end_pred <- end_d %m+% months(1)
is.null(asdasf)

is.null(NULL)

A <- get_X(start_d, end_d, AC, AC_GT, "ARGO")

a <- get_X(start_d, 
        end_d, 
  case = AC, 
  GT = AC_GT,
  lags = c(1:12,24), # ARGO's setting
  pred_unit = "M",
  offset_GT = 0.001)

t <- AC %>% filter(ew_start >= start_pred & ew_start <= end_pred)

ARGO_out <- prediction_func(start_d, 
                     end_d,  
                     start_pred, 
                     end_pred,
                     model = 'ARGO',
                     case = AC, 
                     GT = AC_GT,
                     lags = NULL, # ARGO's setting
                     pred_unit = "M", 
                     offset_GT = 0.001)

SAR_out <- prediction_func(start_d, 
                     end_d,  
                     start_pred, 
                     end_pred,
                     model = 'SAR',
                     case = AC, 
                     GT = AC_GT,
                     lags = NULL, # ARGO's setting
                     pred_unit = "M", 
                     offset_GT = 0.001)
SAR_GT_out <- prediction_func(start_d, 
                     end_d,  
                     start_pred, 
                     end_pred,
                     model = 'SAR_GT',
                     case = AC, 
                     GT = AC_GT,
                     lags = NULL, # ARGO's setting
                     pred_unit = "M", 
                     offset_GT = 0.001)
GT_out <- as.data.frame(prediction_func(start_d, 
                     end_d,  
                     start_pred, 
                     end_pred,
                     model = 'GT',
                     case = AC, 
                     GT = AC_GT,
                     lags = NULL, # ARGO's setting
                     pred_unit = "M", 
                     offset_GT = 0.001))




  yt <- from_Week_to_Month(AC) %>% 
    filter(date >= start_d & date <= end_d) %>%
    mutate(y = log(1 + N_cases))
  y <- yt$y

t <- from_Week_to_Month(AC)
t1 <- from_Week_to_Month(t)

library(DengueARGO)


```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
start_d <- as.Date('2015-01-01'); end_d <- as.Date('2017-12-31')

m15_19_one <- pred_measurement(start_d, end_d,
                 case = AC, GT = AC_GT,
                 12, 1)
m15_17_three <- pred_measurement(start_d, end_d,
                 case = AC, GT = AC_GT,
                 36, 1)

m15_17_six <- pred_measurement(start_d, end_d,
                 case = AC, GT = AC_GT,
                 72, 1)

weekly_cases <- data.frame(date = seq(as.Date("2020-01-01"), as.Date("2020-12-31"), by = "week"),
                           N_cases = sample(1:10, 53, replace = TRUE))
monthly_cases <- from_Week_to_Month(weekly_cases, type = "case")
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
