% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_Prediction.R
\name{get_Prediction}
\alias{get_Prediction}
\title{Model Fitting and Prediction}
\usage{
get_Prediction(
  start_train,
  end_train,
  start_pred,
  end_pred,
  model = "ARGO",
  case,
  GT,
  lags = NULL,
  pred_unit = "Month",
  offset_GT = 0.001
)
}
\arguments{
\item{start_train}{The start date for the training dataset, in "YYYY-MM-DD" format.}

\item{end_train}{The end date for the training dataset, in "YYYY-MM-DD" format.}

\item{start_pred}{The start date for the forecasting period, in "YYYY-MM-DD" format.}

\item{end_pred}{The end date for the forecasting period, in "YYYY-MM-DD" format.}

\item{model}{The prediction model to be applied. Accepted models include "ARGO", "SAR", "GT", or "SAR_GT", with "ARGO" being the default.}

\item{case}{A data frame containing the case data, which must include columns for "date" and "N_cases".}

\item{GT}{A data frame of Google Trends data, relevant to the case study.}

\item{lags}{An optional numeric vector detailing the lags to be applied for generating lagged data. The default setting varies based on the chosen model.}

\item{pred_unit}{The prediction unit, either "Month" or "Week", with "Month" set as the default.}

\item{offset_GT}{A small positive value added to the Google Trends data before logarithmic transformation, set to avoid the log of zero issues. The default value is 0.001.}
}
\value{
Returns a data frame containing both the actual and predicted case counts for the forecast period, facilitating direct comparison and model evaluation.
}
\description{
Utilizes specified prediction models to fit training data, incorporating both epidemiological case data and Google Trends data. After model fitting, it forecasts case counts for a designated future period. The function supports a variety of models including ARGO, SAR, GT, and SAR_GT for a comprehensive analysis.
}
\examples{
get_Prediction(start_train = "2020-01-01", end_train = "2020-06-30",
               start_pred = "2020-07-01", end_pred = "2020-07-31",
               model = "ARGO", case = case_data, GT = GT_data)
}
