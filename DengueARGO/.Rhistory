devtools::document()
case <- read.csv("CaseCount(Brazil).csv")
GT <- read.csv("GT_Brazil.csv")
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
library(DengueARGO)
roxygen2::roxygenize()
library(DengueARGO)
library(DengueARGO)
roxygen2::roxygenize()
roxygen2::roxygenize()
library()
library(DengueARGO)
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
library(DengueARGO)
roxygen2::roxygenize()
roxygen2::roxygenize()
library(DengueARGO)
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
start_d <- as.Date('2006-03-01'); end_d <- as.Date('2009-03-31')
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
library(DengueARGO)
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
library(DengueARGO)
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
?get_X
library(DengueARGO)
?get_X
library(DengueARGO)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(glmnet)
setwd('/Users/xiaoy0a/Desktop/Task/Nowcasting/ARGO rep')
case <- read.csv("CaseCount(Brazil).csv")
GT <- read.csv("GT_Brazil.csv")
# Change the date variable into date class
case$date <- as.Date(case$date,"%d/%m/%Y")
# Select the first time of period for model training
start_d <- as.Date('2006-03-01'); end_d <- as.Date('2009-03-31')
# Select the first time of period for model training
start_d <- as.Date('2006-03-01'); end_d <- as.Date('2009-03-31')
pred_measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
pred_Measurement(start_d,end_d, pred_period = 6,
pred_length = 1)
library(DengueARGO)
library(DengueARGO)
lag_gen()
?lag_gen
install.packages('haven')
library(haven)
setwd('/Users/xiaoy0a/Desktop/Course Work/STAT360FDA/data')
read_xpt("P_DEMO.XPT")
demo <- read_xpt("P_DEMO.XPT")
View(demo)
data_21 <- read.csv("monthly_volume_2021.csv")
View(data_21)
length(unique(data_21$Options.Class))
length(unique(data_21$Underlying))
data_21 <- read.csv("monthly_volume_2021.csv")
data_22 <- read.csv("monthly_volume_2022.csv")
data_23 <- read.csv("monthly_volume_2023.csv")
library(tidyverse)
data_21 %>% group_by(Underlying) %>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE))
data_21 %>% group_by(Trade.Month) %>% group_by(Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE))
data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE))
#
library(fdapace)
d_21_comb <- data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE))
MakeFPCAInputs(IDs = d_21_comb$Underlying, d_21_comb$Trade.Month,
d_21_comb$TotalVolume)
d_21_comb_fda <- MakeFPCAInputs(IDs = d_21_comb$Underlying, d_21_comb$Trade.Month,
d_21_comb$TotalVolume)
d_21_comb_f_obj <- FPCA(d_21_comb_fda$Ly, d_21_comb_fda$Lt,
list(plot = TRUE, methodMuCovEst = 'smooth', userBwCov = 2))
View(d_21_comb)
data(medfly25)
View(medfly25)
lapply(t,function(x) typeof(x))
class(d_21_comb$Trade.Month)
?as.Date
data_21$Trade.Month <- as.Date(data_21$Trade.Month, tryFormats = c("%Y/%m"))
as.Date(data_21$Trade.Month)
data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>%
mutate(Trade.Month = make_date(Year, Month, 1))
library(lubridate)
d_21_comb <- data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>%
mutate(Trade.Month = make_date(Year, Month, 1))
d_21_comb <- data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>% ungroup() %>%
mutate(Trade.Month = make_date(Year, Month, 1))
?make_date
d_21_comb$Trade.Month[1]
str_extract(d_21_comb$Trade.Month[1], "^\\d{4}")
data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>% ungroup() %>%
mutate(
Year = sub("/.*", "", Trade.Month),
Month = sub(".*/", "", Trade.Month)
)
?sub
sub("/.*", "", "Trade/Month")
sub("/.*", "", "Trade/Month/")
sub(".*/", "", "Trade/Month")
d_21_comb <- data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>% ungroup() %>%
mutate(
Year = sub("/.*", "", Trade.Month),
Month = sub(".*/", "", Trade.Month)
) %>% mutate(Trade.Month = make_date(Year, Month, 1))
data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>% ungroup() %>%
mutate(
Year = sub("/.*", "", Trade.Month),
Month = sub(".*/", "", Trade.Month)
) %>% mutate(Trade.Month = make_date(Year, Month, 1))
d_21_comb <- data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>%
mutate(
Year = sub("/.*", "", Trade.Month),
Month = sub(".*/", "", Trade.Month)
) %>% mutate(Trade.Month = make_date(Year, Month, 1))
d_21_comb <- data_21 %>%
mutate(
Year = sub("/.*", "", Trade.Month),
Month = sub(".*/", "", Trade.Month)
) %>% group_by(Trade.Month, Underlying) %>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>%
%>% mutate(Trade.Month = make_date(Year, Month, 1))
data_21 %>%
mutate(
Year = sub("/.*", "", Trade.Month),
Month = sub(".*/", "", Trade.Month)
)
d_21_comb <- data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>%
mutate(
Year = sub("/.*", "", Trade.Month),
Month = sub(".*/", "", Trade.Month)
) %>% mutate(Trade.Month = make_date(Year, Month, 1))
View(d_21_comb)
#
library(fdapace)
class(d_21_comb$Trade.Month)
d_21_comb_fda <- MakeFPCAInputs(IDs = d_21_comb$Underlying, d_21_comb$Trade.Month,
d_21_comb$TotalVolume)
d_21_comb_f_obj <- FPCA(d_21_comb_fda$Ly, d_21_comb_fda$Lt,
list(plot = TRUE, methodMuCovEst = 'smooth', userBwCov = 2))
CreatePathPlot(d_21_comb_f_obj, subset = c(3,5,135), main = 'K = 11', pch = 4); grid()
CreatePathPlot(d_21_comb_f_obj, subset = c(3,5,135), K = 3, main = 'K = 3', pch = 4) ;
CreateOutliersPlot(d_21_comb_f_obj, optns = list(K = 3, variant = 'KDE'))
CreateFuncBoxPlot(d_21_comb_f_obj, xlab = 'Days', ylab = '# of eggs laid', optns =
0 2
View(d_21_comb)
d_21_comb <- data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>%
mutate(
Year = sub("/.*", "", Trade.Month),
Month = sub(".*/", "", Trade.Month),
Trade.Month = make_date(Year, Month, 1),
TotalVolume_log = log(TotalVolume),
)
View(d_21_comb)
d_21_comb_fda <- MakeFPCAInputs(IDs = d_21_comb$Underlying, d_21_comb$Trade.Month,
d_21_comb$TotalVolume)
d_21_comb_fda <- MakeFPCAInputs(IDs = d_21_comb$Underlying, d_21_comb$Trade.Month_log,
d_21_comb$TotalVolume)
d_21_comb <- data_21 %>% group_by(Trade.Month, Underlying)%>%
summarise(TotalVolume = sum(Volume, na.rm = TRUE)) %>%
mutate(
Year = sub("/.*", "", Trade.Month),
Month = sub(".*/", "", Trade.Month),
Trade.Month = make_date(Year, Month, 1),
TotalVolume_log = log(TotalVolume),
)
d_21_comb_fda <- MakeFPCAInputs(IDs = d_21_comb$Underlying, d_21_comb$Trade.Month,
d_21_comb$TotalVolume_log)
d_21_comb_f_obj <- FPCA(d_21_comb_fda$Ly, d_21_comb_fda$Lt,
list(plot = TRUE, methodMuCovEst = 'smooth', userBwCov = 2))
CreatePathPlot(d_21_comb_f_obj, subset = c(3,5,135), main = 'K = 11', pch = 4); grid()
CreatePathPlot(d_21_comb_f_obj, subset = c(3,5,135), K = 3, main = 'K = 3', pch = 4) ;
grid()
CreateOutliersPlot(d_21_comb_f_obj, optns = list(K = 3, variant = 'KDE'))
roxygenize()
library(roxygen2)
roxygenize()
roxygenize()
roxygenize()
devtools::document()
library(DengueARGO)
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("diseasesurveillance/denguetracker")
library(denguetracker)
# Set directory
setwd('/Users/xiaoy0a/Desktop/Task/Nowcasting/2ndMeeting/')
#Now test 4 states with different features
AC <- fetch_data_from_state("AC", 2013, 2023)
AC_GT <- read.csv("AC_GT.csv", header = F, col.names = colnames_GT
)[-c(1:3),]
colnames_GT <- c("Time", "Dengue", "Sintomas.dengue")
AC_GT <- read.csv("AC_GT.csv", header = F, col.names = colnames_GT
)[-c(1:3),]
pred_Measurement(start_d, end_d,
case = AC, GT = AC_GT,
12, 1)
start_d <- as.Date('2015-01-01'); end_d <- as.Date('2019-12-31')
pred_Measurement(start_d, end_d,
case = AC, GT = AC_GT,
12, 1)
pred_Measurement(start_d, end_d,
case = AC, GT = AC_GT,
12, 1)
library(DengueARGO)
start_d <- as.Date('2015-01-01'); end_d <- as.Date('2019-12-31')
pred_Measurement(start_d, end_d,
case = AC, GT = AC_GT,
12, 1)
devtools::load_all(".")
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("diseasesurveillance/denguetracker")
library(denguetracker)
# Set directory
setwd('/Users/xiaoy0a/Desktop/Task/Nowcasting/2ndMeeting/')
library(DengueARGO)
start_d <- as.Date('2015-01-01'); end_d <- as.Date('2019-12-31')
pred_Measurement(start_d, end_d,
case = AC, GT = AC_GT,
12, 1)
library(DengueARGO)
pred_Measurement(start_d, end_d,
case = AC, GT = AC_GT,
12, 1)
library(DengueARGO)
?DengueARGO
library(DengueARGO)
detach("package:DengueARGO", unload = TRUE)
library(DengueARGO)
pred_Measurement(start_d, end_d,
case = AC, GT = AC_GT,
12, 1)
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("diseasesurveillance/denguetracker")
library(denguetracker)
# Set directory
setwd('/Users/xiaoy0a/Desktop/Task/Nowcasting/2ndMeeting/')
library(DengueARGO)
knitr::opts_chunk$set(echo = TRUE)
devtools::install_github("diseasesurveillance/denguetracker")
library(denguetracker)
# Set directory
setwd('/Users/xiaoy0a/Desktop/Task/Nowcasting/2ndMeeting/')
start_d <- as.Date('2015-01-01'); end_d <- as.Date('2019-12-31')
pred_Measurement(start_d, end_d,
case = AC, GT = AC_GT,
12, 1)
?get_X
